{"ast":null,"code":"var _jsxFileName = \"/home/vinsinned/todo-app/client/src/components/datePicker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport ResponsiveTimePicker from \"./timePicker\";\nimport '../styles/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DateForm(props) {\n  _s();\n\n  const {\n    todo,\n    updateTodo\n  } = props; //Create a date starting from today for default date value\n\n  const [date, setDate] = useState(new Date()); //Create date and time button states in order to add and remove, then rerender\n\n  const [dateButton, setDateButton] = useState([/*#__PURE__*/_jsxDEV(\"button\", {\n    id: \"dateButton\",\n    type: \"button\",\n    onClick: e => dateClicked(e),\n    className: \"dateAdd date-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"material-symbols-outlined\",\n      children: \"event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 121\n    }, this), \"Add Date\"]\n  }, \"dateButton\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 2\n  }, this)]);\n  const [timeButton, setTimeButton] = useState([]); //When date picker is changed, set the date state and update todo state to new date\n\n  function datePickerChange(date) {\n    setDate(date);\n    updateTodo({\n      date: date\n    });\n  }\n\n  function addDate() {\n    document.getElementsByClassName('react-datepicker__input-container')[0].classList.add('date-show');\n  }\n\n  function removeDate() {\n    document.getElementsByClassName('react-datepicker__input-container')[0].classList.remove('date-show');\n  }\n\n  function addTime() {\n    document.getElementsByClassName('css-1u3bzj6-MuiFormControl-root-MuiTextField-root')[0].classList.add('time-show');\n  }\n\n  function removeTime() {\n    document.getElementsByClassName('css-1u3bzj6-MuiFormControl-root-MuiTextField-root')[0].classList.remove('time-show');\n  }\n\n  function dateClicked(e) {\n    if (e.target.className.includes('dateAdd')) {\n      //If the date button didn't add the date picker yet, add it and change the two buttons to match\n      addDate();\n      setDateButton([/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"dateButton\",\n        type: \"button\",\n        onClick: e => dateClicked(e),\n        className: \"dateRemove date-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 126\n        }, this), \"Remove Date\"]\n      }, \"dateButton\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 4\n      }, this)]);\n      setTimeButton([/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"timeButton\",\n        className: \"timeAdd date-button\",\n        onClick: e => timeClicked(e),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"timer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 123\n        }, this), \"Add Time\"]\n      }, \"timeButton\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this)]);\n      updateTodo({\n        date: new Date()\n      });\n    } else if (e.target.className.includes('dateRemove')) {\n      //If the date picker is already added, remove it\n      removeDate();\n      setDateButton([/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"dateButton\",\n        type: \"button\",\n        onClick: e => dateClicked(e),\n        className: \"dateAdd date-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 123\n        }, this), \"Add Date\"]\n      }, \"dateButton\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 4\n      }, this)]);\n      setTimeButton([]);\n      document.getElementsByClassName('css-1u3bzj6-MuiFormControl-root-MuiTextField-root')[0].classList.remove('time-show');\n      updateTodo({\n        date: null\n      });\n    }\n  }\n\n  function timeClicked(e) {\n    if (e.target.className.includes('timeAdd')) {\n      //If the time picker isn't added yet, \n      addTime();\n      setTimeButton([/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"timeButton\",\n        className: \"timeRemove date-button\",\n        onClick: e => timeClicked(e),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"timer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 126\n        }, this), \"Remove Time\"]\n      }, \"timeButton\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 4\n      }, this)]);\n      updateTodo({\n        time: new Date()\n      });\n    } else if (e.target.className.includes('timeRemove')) {\n      removeTime();\n      setTimeButton([/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        id: \"timeButton\",\n        className: \"timeAdd date-button\",\n        onClick: e => timeClicked(e),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"timer \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 123\n        }, this), \"Add Time\"]\n      }, \"timeButton\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 4\n      }, this)]);\n      updateTodo({\n        time: null\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dateContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group date-group\",\n      children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: date,\n        onChange: date => datePickerChange(date),\n        className: \"date-picker\"\n      }, \"date\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }, this), dateButton, timeButton, /*#__PURE__*/_jsxDEV(ResponsiveTimePicker, {\n        todo: todo,\n        updateTodo: updateTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 2\n  }, this);\n}\n\n_s(DateForm, \"GEgimoVqdccoLHLLLXOnJQ8Kuww=\");\n\n_c = DateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateForm\");","map":{"version":3,"names":["React","useState","DatePicker","ResponsiveTimePicker","DateForm","props","todo","updateTodo","date","setDate","Date","dateButton","setDateButton","e","dateClicked","timeButton","setTimeButton","datePickerChange","addDate","document","getElementsByClassName","classList","add","removeDate","remove","addTime","removeTime","target","className","includes","timeClicked","time"],"sources":["/home/vinsinned/todo-app/client/src/components/datePicker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport ResponsiveTimePicker from \"./timePicker\";\nimport '../styles/style.css';\n\nexport default function DateForm(props) {\nconst { todo, updateTodo } = props;\n\n//Create a date starting from today for default date value\nconst [date, setDate] = useState(new Date());\n//Create date and time button states in order to add and remove, then rerender\nconst [dateButton, setDateButton] = useState([\n\t<button key=\"dateButton\" id=\"dateButton\" type=\"button\" onClick={(e) => dateClicked(e)} className=\"dateAdd date-button\"><span className=\"material-symbols-outlined\">event</span>Add Date</button>\n]);\nconst [timeButton, setTimeButton] = useState([]);\n\n//When date picker is changed, set the date state and update todo state to new date\nfunction datePickerChange(date) {\n\tsetDate(date);\n\tupdateTodo({ date: date });\n}\n\nfunction addDate() {\n\tdocument.getElementsByClassName('react-datepicker__input-container')[0].classList.add('date-show');\n}\n\nfunction removeDate() {\n\tdocument.getElementsByClassName('react-datepicker__input-container')[0].classList.remove('date-show');\n}\n\nfunction addTime() {\n\tdocument.getElementsByClassName('css-1u3bzj6-MuiFormControl-root-MuiTextField-root')[0].classList.add('time-show');\n}\n\nfunction removeTime() {\n\tdocument.getElementsByClassName('css-1u3bzj6-MuiFormControl-root-MuiTextField-root')[0].classList.remove('time-show');\n}\n\nfunction dateClicked(e) {\n\tif (e.target.className.includes('dateAdd')) {\n\t\t//If the date button didn't add the date picker yet, add it and change the two buttons to match\n\t\taddDate();\n\t\tsetDateButton([\n\t\t\t<button key=\"dateButton\" id=\"dateButton\" type=\"button\" onClick={(e) => dateClicked(e)} className=\"dateRemove date-button\"><span className=\"material-symbols-outlined\">event</span>Remove Date</button>\n\t\t]);\n\t\tsetTimeButton([\n\t\t\t<button type=\"button\" key=\"timeButton\" id=\"timeButton\" className=\"timeAdd date-button\" onClick={(e) => timeClicked(e)}><span className=\"material-symbols-outlined\">timer </span>Add Time</button>\n\t\t]);\n\t\tupdateTodo({ date: new Date() });\n\t} else if (e.target.className.includes('dateRemove')) {\n\t\t//If the date picker is already added, remove it\n\t\tremoveDate();\n\t\tsetDateButton([\n\t\t\t<button key=\"dateButton\" id=\"dateButton\" type=\"button\" onClick={(e) => dateClicked(e)} className=\"dateAdd date-button\"><span className=\"material-symbols-outlined\">event</span>Add Date</button>\n\t\t]);\n\t\tsetTimeButton([]);\n\t\tdocument.getElementsByClassName('css-1u3bzj6-MuiFormControl-root-MuiTextField-root')[0].classList.remove('time-show');\n\t\tupdateTodo({ date: null });\n\t}\n}\n\nfunction timeClicked(e) {\n\tif (e.target.className.includes('timeAdd')) {\n\t\t//If the time picker isn't added yet, \n\t\taddTime();\n\t\tsetTimeButton([\n\t\t\t<button type=\"button\" key=\"timeButton\" id=\"timeButton\" className=\"timeRemove date-button\" onClick={(e) => timeClicked(e)}><span className=\"material-symbols-outlined\">timer </span>Remove Time</button>\n\t\t]);\n\t\tupdateTodo({ time: new Date() });\n\t} else if (e.target.className.includes('timeRemove')) {\n\t\tremoveTime();\n\t\tsetTimeButton([\n\t\t\t<button type=\"button\" key=\"timeButton\" id=\"timeButton\" className=\"timeAdd date-button\" onClick={(e) => timeClicked(e)}><span className=\"material-symbols-outlined\">timer </span>Add Time</button>\n\t\t]);\n\t\tupdateTodo({ time: null });\n\t}\n}\n\nreturn (\n\t<div className=\"dateContainer\">\n\t\t<div className=\"form-group date-group\">\n\t\t\t<DatePicker selected={date} onChange={(date) => datePickerChange(date)} key=\"date\" className=\"date-picker\" />\n\t\t\t{dateButton}\n\t\t\t{timeButton}\n\t\t\t<ResponsiveTimePicker todo={todo} updateTodo={updateTodo} />\n\t\t</div>\n\t</div>    \n)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}