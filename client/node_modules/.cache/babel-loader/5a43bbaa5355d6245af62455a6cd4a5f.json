{"ast":null,"code":"var _jsxFileName = \"/home/vinsinned/todo-app/client/src/components/todos.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = props =>\n/*#__PURE__*/\n\n/*\n<tr>\n  <td>{props.record.name}</td>\n  <td>{props.record.position}</td>\n  <td>{props.record.level}</td>\n  <td>\n    <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n    <button className=\"btn btn-link\"\n      onClick={() => {\n        props.deleteRecord(props.record._id);\n      }}\n    >\n      Delete\n    </button>\n  </td>\n</tr>\n*/\n_jsxDEV(\"li\", {\n  children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 2\n}, this);\n\n_c = Todo;\nexport default function TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]); // This method fetches the todos from the database.\n\n  useEffect(() => {\n    async function getTodos() {\n      const response = await fetch(`http://localhost:5000/todos/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const todoJSON = await response.json();\n      setTodos(todoJSON);\n    }\n\n    getTodos();\n    return;\n  }, [todos.length]); // This method will delete a todo\n\n  async function deleteTodo(id) {\n    await fetch(`http://localhost:5000/todo/${id}`, {\n      method: \"DELETE\"\n    });\n    const newTodos = records.filter(el => el._id !== id);\n    setTodos(newTodos);\n  } // This method will map out the records on the table\n\n\n  function todoList() {\n    return todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(Todo\n      /*\n      record={record}\n      deleteRecord={() => deleteRecord(record._id)}\n      key={record._id}\n      */\n      , {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 4\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todoList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 4\n  }, this);\n}\n\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c2 = TodoList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useState","Link","Todo","props","TodoList","todos","setTodos","getTodos","response","fetch","ok","message","statusText","window","alert","todoJSON","json","length","deleteTodo","id","method","newTodos","records","filter","el","_id","todoList","map","todo"],"sources":["/home/vinsinned/todo-app/client/src/components/todos.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n \nconst Todo = (props) => (\n\t/*\n <tr>\n   <td>{props.record.name}</td>\n   <td>{props.record.position}</td>\n   <td>{props.record.level}</td>\n   <td>\n     <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\n     <button className=\"btn btn-link\"\n       onClick={() => {\n         props.deleteRecord(props.record._id);\n       }}\n     >\n       Delete\n     </button>\n   </td>\n </tr>\n */\n <li>\n\t\t<div>\n\n\t\t</div>\n </li>\n);\n \nexport default function TodoList() {\n const [todos, setTodos] = useState([]);\n \n // This method fetches the todos from the database.\n useEffect(() => {\n   async function getTodos() {\n     const response = await fetch(`http://localhost:5000/todos/`);\n \n     if (!response.ok) {\n       const message = `An error occurred: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const todoJSON = await response.json();\n     setTodos(todoJSON);\n   }\n \n   getTodos();\n \n   return;\n }, [todos.length]);\n \n // This method will delete a todo\n async function deleteTodo(id) {\n   await fetch(`http://localhost:5000/todo/${id}`, {\n     method: \"DELETE\"\n   });\n \n   const newTodos = records.filter((el) => el._id !== id);\n   setTodos(newTodos);\n }\n \n // This method will map out the records on the table\n function todoList() {\n\treturn todos.map((todo) => {\n\t\treturn (\n\t\t\t<Todo\n\t\t\t\t/*\n\t\t\t\trecord={record}\n\t\t\t\tdeleteRecord={() => deleteRecord(record._id)}\n\t\t\t\tkey={record._id}\n\t\t\t\t*/\n\t\t\t/>\n\t\t);\n\t});\n }\n \n // This following section will display the table with the records of individuals.\n return (\n   <div>\n\t\t<h3>Todos</h3>\n\t\t<ul className=\"todo-list\">\n\t\t\t{todoList()}\n    </ul>\n   </div>\n );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD;AAAA;;AACZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;EAAA,uBACC;IAAA;IAAA;IAAA;EAAA;AADD;EAAA;EAAA;EAAA;AAAA,QAlBD;;KAAMD,I;AAyBN,eAAe,SAASE,QAAT,GAAoB;EAAA;;EAClC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC,CADkC,CAGlC;;EACAD,SAAS,CAAC,MAAM;IACd,eAAeQ,QAAf,GAA0B;MACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAAF,CAA5B;;MAEA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAMC,OAAO,GAAI,sBAAqBH,QAAQ,CAACI,UAAW,EAA1D;QACAC,MAAM,CAACC,KAAP,CAAaH,OAAb;QACA;MACD;;MAED,MAAMI,QAAQ,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAvB;MACAV,QAAQ,CAACS,QAAD,CAAR;IACD;;IAEDR,QAAQ;IAER;EACD,CAjBQ,EAiBN,CAACF,KAAK,CAACY,MAAP,CAjBM,CAAT,CAJkC,CAuBlC;;EACA,eAAeC,UAAf,CAA0BC,EAA1B,EAA8B;IAC5B,MAAMV,KAAK,CAAE,8BAA6BU,EAAG,EAAlC,EAAqC;MAC9CC,MAAM,EAAE;IADsC,CAArC,CAAX;IAIA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,MAAR,CAAgBC,EAAD,IAAQA,EAAE,CAACC,GAAH,KAAWN,EAAlC,CAAjB;IACAb,QAAQ,CAACe,QAAD,CAAR;EACD,CA/BiC,CAiClC;;;EACA,SAASK,QAAT,GAAoB;IACpB,OAAOrB,KAAK,CAACsB,GAAN,CAAWC,IAAD,IAAU;MAC1B,oBACC,QAAC;MACA;AACJ;AACA;AACA;AACA;MALG;QAAA;QAAA;QAAA;MAAA,QADD;IASA,CAVM,CAAP;EAWC,CA9CiC,CAgDlC;;;EACA,oBACE;IAAA,wBACD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADC,eAED;MAAI,SAAS,EAAC,WAAd;MAAA,UACEF,QAAQ;IADV;MAAA;MAAA;MAAA;IAAA,QAFC;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQA;;GAzDuBtB,Q;;MAAAA,Q"},"metadata":{},"sourceType":"module"}