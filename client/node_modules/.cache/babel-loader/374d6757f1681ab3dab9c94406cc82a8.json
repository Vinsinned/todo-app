{"ast":null,"code":"var _jsxFileName = \"/home/vinsinned/todo-app/client/src/components/datePicker/year_dropdown.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport YearDropdownOptions from \"./year_dropdown_options\";\nimport onClickOutside from \"react-onclickoutside\";\nimport { getYear } from \"./date_utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WrappedYearDropdownOptions = onClickOutside(YearDropdownOptions);\n_c = WrappedYearDropdownOptions;\nexport default class YearDropdown extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      dropdownVisible: false\n    };\n\n    this.renderSelectOptions = () => {\n      const minYear = this.props.minDate ? getYear(this.props.minDate) : 1900;\n      const maxYear = this.props.maxDate ? getYear(this.props.maxDate) : 2100;\n      const options = [];\n\n      for (let i = minYear; i <= maxYear; i++) {\n        options.push( /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this));\n      }\n\n      return options;\n    };\n\n    this.onSelectChange = e => {\n      this.onChange(e.target.value);\n    };\n\n    this.renderSelectMode = () => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: this.props.year,\n      className: \"react-datepicker__year-select\",\n      onChange: this.onSelectChange,\n      children: this.renderSelectOptions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this);\n\n    this.renderReadView = visible => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        visibility: visible ? \"visible\" : \"hidden\"\n      },\n      className: \"react-datepicker__year-read-view\",\n      onClick: event => this.toggleDropdown(event),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"react-datepicker__year-read-view--down-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"react-datepicker__year-read-view--selected-year\",\n        children: this.props.year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, \"read\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this);\n\n    this.renderDropdown = () => /*#__PURE__*/_jsxDEV(WrappedYearDropdownOptions, {\n      year: this.props.year,\n      onChange: this.onChange,\n      onCancel: this.toggleDropdown,\n      minDate: this.props.minDate,\n      maxDate: this.props.maxDate,\n      scrollableYearDropdown: this.props.scrollableYearDropdown,\n      yearDropdownItemNumber: this.props.yearDropdownItemNumber\n    }, \"dropdown\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this);\n\n    this.renderScrollMode = () => {\n      const {\n        dropdownVisible\n      } = this.state;\n      let result = [this.renderReadView(!dropdownVisible)];\n\n      if (dropdownVisible) {\n        result.unshift(this.renderDropdown());\n      }\n\n      return result;\n    };\n\n    this.onChange = year => {\n      this.toggleDropdown();\n      if (year === this.props.year) return;\n      this.props.onChange(year);\n    };\n\n    this.toggleDropdown = event => {\n      this.setState({\n        dropdownVisible: !this.state.dropdownVisible\n      }, () => {\n        if (this.props.adjustDateOnChange) {\n          this.handleYearChange(this.props.date, event);\n        }\n      });\n    };\n\n    this.handleYearChange = (date, event) => {\n      this.onSelect(date, event);\n      this.setOpen();\n    };\n\n    this.onSelect = (date, event) => {\n      if (this.props.onSelect) {\n        this.props.onSelect(date, event);\n      }\n    };\n\n    this.setOpen = () => {\n      if (this.props.setOpen) {\n        this.props.setOpen(true);\n      }\n    };\n  }\n\n  render() {\n    let renderedDropdown;\n\n    switch (this.props.dropdownMode) {\n      case \"scroll\":\n        renderedDropdown = this.renderScrollMode();\n        break;\n\n      case \"select\":\n        renderedDropdown = this.renderSelectMode();\n        break;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--${this.props.dropdownMode}`,\n      children: renderedDropdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nYearDropdown.propTypes = {\n  adjustDateOnChange: PropTypes.bool,\n  dropdownMode: PropTypes.oneOf([\"scroll\", \"select\"]).isRequired,\n  maxDate: PropTypes.instanceOf(Date),\n  minDate: PropTypes.instanceOf(Date),\n  onChange: PropTypes.func.isRequired,\n  scrollableYearDropdown: PropTypes.bool,\n  year: PropTypes.number.isRequired,\n  yearDropdownItemNumber: PropTypes.number,\n  date: PropTypes.instanceOf(Date),\n  onSelect: PropTypes.func,\n  setOpen: PropTypes.func\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"WrappedYearDropdownOptions\");","map":{"version":3,"names":["React","PropTypes","YearDropdownOptions","onClickOutside","getYear","WrappedYearDropdownOptions","YearDropdown","Component","state","dropdownVisible","renderSelectOptions","minYear","props","minDate","maxYear","maxDate","options","i","push","onSelectChange","e","onChange","target","value","renderSelectMode","year","renderReadView","visible","visibility","event","toggleDropdown","renderDropdown","scrollableYearDropdown","yearDropdownItemNumber","renderScrollMode","result","unshift","setState","adjustDateOnChange","handleYearChange","date","onSelect","setOpen","render","renderedDropdown","dropdownMode","propTypes","bool","oneOf","isRequired","instanceOf","Date","func","number"],"sources":["/home/vinsinned/todo-app/client/src/components/datePicker/year_dropdown.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport YearDropdownOptions from \"./year_dropdown_options\";\nimport onClickOutside from \"react-onclickoutside\";\nimport { getYear } from \"./date_utils\";\n\nvar WrappedYearDropdownOptions = onClickOutside(YearDropdownOptions);\n\nexport default class YearDropdown extends React.Component {\n  static propTypes = {\n    adjustDateOnChange: PropTypes.bool,\n    dropdownMode: PropTypes.oneOf([\"scroll\", \"select\"]).isRequired,\n    maxDate: PropTypes.instanceOf(Date),\n    minDate: PropTypes.instanceOf(Date),\n    onChange: PropTypes.func.isRequired,\n    scrollableYearDropdown: PropTypes.bool,\n    year: PropTypes.number.isRequired,\n    yearDropdownItemNumber: PropTypes.number,\n    date: PropTypes.instanceOf(Date),\n    onSelect: PropTypes.func,\n    setOpen: PropTypes.func,\n  };\n\n  state = {\n    dropdownVisible: false,\n  };\n\n  renderSelectOptions = () => {\n    const minYear = this.props.minDate ? getYear(this.props.minDate) : 1900;\n    const maxYear = this.props.maxDate ? getYear(this.props.maxDate) : 2100;\n\n    const options = [];\n    for (let i = minYear; i <= maxYear; i++) {\n      options.push(\n        <option key={i} value={i}>\n          {i}\n        </option>\n      );\n    }\n    return options;\n  };\n\n  onSelectChange = (e) => {\n    this.onChange(e.target.value);\n  };\n\n  renderSelectMode = () => (\n    <select\n      value={this.props.year}\n      className=\"react-datepicker__year-select\"\n      onChange={this.onSelectChange}\n    >\n      {this.renderSelectOptions()}\n    </select>\n  );\n\n  renderReadView = (visible) => (\n    <div\n      key=\"read\"\n      style={{ visibility: visible ? \"visible\" : \"hidden\" }}\n      className=\"react-datepicker__year-read-view\"\n      onClick={(event) => this.toggleDropdown(event)}\n    >\n      <span className=\"react-datepicker__year-read-view--down-arrow\" />\n      <span className=\"react-datepicker__year-read-view--selected-year\">\n        {this.props.year}\n      </span>\n    </div>\n  );\n\n  renderDropdown = () => (\n    <WrappedYearDropdownOptions\n      key=\"dropdown\"\n      year={this.props.year}\n      onChange={this.onChange}\n      onCancel={this.toggleDropdown}\n      minDate={this.props.minDate}\n      maxDate={this.props.maxDate}\n      scrollableYearDropdown={this.props.scrollableYearDropdown}\n      yearDropdownItemNumber={this.props.yearDropdownItemNumber}\n    />\n  );\n\n  renderScrollMode = () => {\n    const { dropdownVisible } = this.state;\n    let result = [this.renderReadView(!dropdownVisible)];\n    if (dropdownVisible) {\n      result.unshift(this.renderDropdown());\n    }\n    return result;\n  };\n\n  onChange = (year) => {\n    this.toggleDropdown();\n    if (year === this.props.year) return;\n    this.props.onChange(year);\n  };\n\n  toggleDropdown = (event) => {\n    this.setState(\n      {\n        dropdownVisible: !this.state.dropdownVisible,\n      },\n      () => {\n        if (this.props.adjustDateOnChange) {\n          this.handleYearChange(this.props.date, event);\n        }\n      }\n    );\n  };\n\n  handleYearChange = (date, event) => {\n    this.onSelect(date, event);\n    this.setOpen();\n  };\n\n  onSelect = (date, event) => {\n    if (this.props.onSelect) {\n      this.props.onSelect(date, event);\n    }\n  };\n\n  setOpen = () => {\n    if (this.props.setOpen) {\n      this.props.setOpen(true);\n    }\n  };\n\n  render() {\n    let renderedDropdown;\n    switch (this.props.dropdownMode) {\n      case \"scroll\":\n        renderedDropdown = this.renderScrollMode();\n        break;\n      case \"select\":\n        renderedDropdown = this.renderSelectMode();\n        break;\n    }\n\n    return (\n      <div\n        className={`react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--${this.props.dropdownMode}`}\n      >\n        {renderedDropdown}\n      </div>\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}