{"ast":null,"code":"var _jsxFileName = \"/home/vinsinned/todo-app/client/src/components/createCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Colors from \"./colorForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateCategory() {\n  _s();\n\n  const [category, setCategory] = useState({\n    name: \"\",\n    color: {\n      colorHex: \"#78909C\",\n      colorName: \"Regent Gray\"\n    }\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateCategory(value) {\n    return setCategory(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new category to the database.\n\n    const newPerson = { ...category\n    }; //fiux\n\n    await fetch(\"http://localhost:5000/categories/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setCategory({\n      name: \"\",\n      color: {\n        colorHex: \"#78909C\",\n        colorName: \"Regent Gray\"\n      }\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: category.name,\n          onChange: e => updateCategory({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"color\",\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          className: \"form-control\",\n          id: \"color\",\n          value: category.color,\n          onChange: e => updateCategory({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"current-color form-control\",\n          value: category.color,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"button-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 4\n  }, this);\n}\n\n_s(CreateCategory, \"XKa8My1asQHTCT/m81duRU3v1e8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CreateCategory;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCategory\");","map":{"version":3,"names":["React","useState","useNavigate","Colors","CreateCategory","category","setCategory","name","color","colorHex","colorName","navigate","updateCategory","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target"],"sources":["/home/vinsinned/todo-app/client/src/components/createCategory.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport Colors from \"./colorForm\";\n \nexport default function CreateCategory() {\n const [category, setCategory] = useState({\n   name: \"\",\n   color: {\n    colorHex: \"#78909C\",\n    colorName: \"Regent Gray\",\n   },\n });\n const navigate = useNavigate();\n \n // These methods will update the state properties.\n function updateCategory(value) {\n   return setCategory((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new category to the database.\n   const newPerson = { ...category };\n  \n   //fiux\n   await fetch(\"http://localhost:5000/categories/add\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newPerson),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setCategory({ name: \"\", color: { colorHex: \"#78909C\", colorName: \"Regent Gray\"}, });\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div>\n     <h3>Create New Category</h3>\n     <form onSubmit={onSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"name\"\n          value={category.name}\n          onChange={(e) => updateCategory({ name: e.target.value })}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"color\">Color</label>\n        <input\n          type=\"button\"\n          className=\"form-control\"\n          id=\"color\"\n          value={category.color}\n          onChange={(e) => updateCategory({ name: e.target.value })}\n        />\n        <button type=\"button\" className=\"current-color form-control\" value={category.color} >\n          <span className=\"button-color\"></span>\n          {category}\n        </button>\n      </div>\n      <div className=\"form-group\">\n        <input\n          type=\"submit\"\n          value=\"Add\"\n          className=\"btn btn-primary\"\n        />\n      </div>\n     </form>\n   </div>\n );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}