[{"/home/vinsinned/todo-app/client/src/index.js":"1","/home/vinsinned/todo-app/client/src/App.js":"2","/home/vinsinned/todo-app/client/src/reportWebVitals.js":"3","/home/vinsinned/todo-app/client/src/components/createTodo.js":"4","/home/vinsinned/todo-app/client/src/components/tagCheckboxes.js":"5","/home/vinsinned/todo-app/client/src/components/priorityRadio.js":"6","/home/vinsinned/todo-app/client/src/components/navbar.js":"7","/home/vinsinned/todo-app/client/src/components/todos.js":"8","/home/vinsinned/todo-app/client/src/components/sidebar.js":"9","/home/vinsinned/todo-app/client/src/components/colorForm.js":"10","/home/vinsinned/todo-app/client/src/components/createCategory.js":"11","/home/vinsinned/todo-app/client/src/components/datePicker.js":"12","/home/vinsinned/todo-app/client/src/components/timePicker.js":"13","/home/vinsinned/todo-app/client/src/components/inbox.js":"14"},{"size":628,"mtime":1658970170017,"results":"15","hashOfConfig":"16"},{"size":3309,"mtime":1665438942434,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1658178332351,"results":"18","hashOfConfig":"16"},{"size":4170,"mtime":1665718837999,"results":"19","hashOfConfig":"16"},{"size":7289,"mtime":1662595497138,"results":"20","hashOfConfig":"16"},{"size":5093,"mtime":1662351965380,"results":"21","hashOfConfig":"16"},{"size":1984,"mtime":1662595821230,"results":"22","hashOfConfig":"16"},{"size":1337,"mtime":1659992190756,"results":"23","hashOfConfig":"16"},{"size":5908,"mtime":1665439010675,"results":"24","hashOfConfig":"16"},{"size":1778,"mtime":1662349384622,"results":"25","hashOfConfig":"16"},{"size":5182,"mtime":1662350116309,"results":"26","hashOfConfig":"16"},{"size":3724,"mtime":1662351222399,"results":"27","hashOfConfig":"16"},{"size":929,"mtime":1662353379408,"results":"28","hashOfConfig":"16"},{"size":11111,"mtime":1665718683459,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"27tmfm",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/vinsinned/todo-app/client/src/index.js",[],[],"/home/vinsinned/todo-app/client/src/App.js",["78","79","80"],[],"/home/vinsinned/todo-app/client/src/reportWebVitals.js",[],[],"/home/vinsinned/todo-app/client/src/components/createTodo.js",[],[],"/home/vinsinned/todo-app/client/src/components/tagCheckboxes.js",["81","82","83","84","85"],[],"import React, { useEffect, useState } from \"react\";\n\nexport default function Checkboxes(props) {\n\tconst {tags, todo, updateTodo} = props;\n\t//Declare a list state that will contain HTML of all tags\n\tconst [list, setList] = useState([]);\n\t\n\t//Get tags from database and map the data to create HTML\n\tasync function allTags() {\n\t\tconst tags = await fetch(`http://localhost:5000/tags`);\n\n\t\tif (!tags.ok) {\n\t\t\tconst message = `An error occurred: ${tags.statusText}`;\n\t\t\twindow.alert(message);\n\t\t\treturn;\n\t\t}\n\n\t\t//Wait for tags json to finish fetch (It is asynchronous)\n\t\tconst list = await tags.json();\n\t\t//Declare an array to fill with HTML\n\t\tconst tagsArray = [];\n\n\t\tlist.map((tag) => {\n\t\t\ttagsArray.push(\n\t\t\t\t<div className={`tag-name-container ${tag.name}`} key={tag._id} onClick={(e) => tagFormClick(e)}>\n\t\t\t\t\t<div className=\"tag-flex-left\">\n\t\t\t\t\t\t<svg style={{ width: \"1.1rem\", height: \"1.1rem\" }} viewBox=\"0 0 24 24\" className=\"checkbox-sell-symbol\">\n\t\t\t\t\t\t\t<path fill=\"#808080\" d=\"M5.5,7A1.5,1.5 0 0,1 4,5.5A1.5,1.5 0 0,1 5.5,4A1.5,1.5 0 0,1 7,5.5A1.5,1.5 0 0,1 5.5,7M21.41,11.58L12.41,2.58C12.05,2.22 11.55,2 11,2H4C2.89,2 2,2.89 2,4V11C2,11.55 2.22,12.05 2.59,12.41L11.58,21.41C11.95,21.77 12.45,22 13,22C13.55,22 14.05,21.77 14.41,21.41L21.41,14.41C21.78,14.05 22,13.55 22,13C22,12.44 21.77,11.94 21.41,11.58Z\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<label htmlFor={tag.name} className=\"form-check-label tag-name-label\">{tag.name}</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label className=\"tag-checkbox-container\">\n\t\t\t\t\t\t<input type=\"checkbox\" \n\t\t\t\t\t\t\tclassName=\"input-checkbox-button\"\n\t\t\t\t\t\t\tvalue={tag.name} \n\t\t\t\t\t\t\tonChange={(e) => \n\t\t\t\t\t\t\t\tcheckEvent(e)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={tag.name}\n\t\t\t\t\t\t\tid={tag._id}\n\t\t\t\t\t\t\tchecked={todo.tag.includes(tag.name)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\t\t//Set list to the tags array in order to rerender\n\t\tsetList(tagsArray);\n\t};\n\n\t//When a tag option is clicked, toggle the check\n\tfunction tagFormClick(e) {\n\t\tdocument.getElementsByName(e.target.classList[1])[0].checked = !document.getElementsByName(e.target.classList[1])[0].checked;\n\t\tcheckEvent(document.getElementsByName(e.target.classList[1])[0]);\n\t}\n\n\tfunction checkEvent(e) {\n\t\tif (e.checked === true) {\n\t\t\t//If the tag is checked, add the tag to the state\n\t\t\tupdateTodo({ tag: [...todo.tag, e.value] });\n\t\t} else if (e.checked === false) {\n\t\t\t//Else, go through the array and remove the tag\n\t\t\tupdateTodo({tag: todo.tag.filter(value => value !== e.value)})\n\t\t}\n\t}\n\n\t//When the tag todo button is clicked, add styling and blocker\n\tfunction tagCheckboxClick(e) {\n\t\tdocument.getElementsByClassName('tag-blocker')[0].classList.add('tag-blocker--show');\n\t\tdocument.getElementsByClassName('todo-sell-button')[0].classList.add('todo-sell-button--clicked');\n\t\tallTags();\n\t}\n\t\n\t//Add a new tag to the database if the add tag button is clicked\n\tasync function addTag(name) {\n\t\t//Declare a variable with the name and push it to the database\n\t\tconst newTag = name;\n\n\t\tawait fetch(\"http://localhost:5000/tags/add\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(newTag),\n\t\t})\n\t\t.catch(error => {\n\t\t\twindow.alert(error);\n\t\t\treturn;\n\t\t});\n\n\t\t//Wait until fetch gets the tag revently added\n\t\tconst tags = await fetch(`http://localhost:5000/tags/search?${new URLSearchParams({name: newTag.name})}`);\n\n\t\tif (!tags.ok) {\n\t\t\tconst message = `An error occurred: ${tags.statusText}`;\n\t\t\twindow.alert(message);\n\t\t\treturn;\n\t\t}\n\n\t\t//Update the list state with the new results\n\t\tconst list = await tags.json();\n\t\tconst tagsArray = [];\n\n\t\tlist.map((tag) => {\n\t\t\ttagsArray.push(\n\t\t\t\t<div className={`tag-name-container ${tag.name}`} key={tag._id} onClick={(e) => tagFormClick(e)}>\n\t\t\t\t\t<div className=\"tag-flex-left\">\n\t\t\t\t\t\t<svg style={{ width: \"1.1rem\", height: \"1.1rem\" }} viewBox=\"0 0 24 24\" className=\"checkbox-sell-symbol\">\n\t\t\t\t\t\t\t<path fill=\"#808080\" d=\"M5.5,7A1.5,1.5 0 0,1 4,5.5A1.5,1.5 0 0,1 5.5,4A1.5,1.5 0 0,1 7,5.5A1.5,1.5 0 0,1 5.5,7M21.41,11.58L12.41,2.58C12.05,2.22 11.55,2 11,2H4C2.89,2 2,2.89 2,4V11C2,11.55 2.22,12.05 2.59,12.41L11.58,21.41C11.95,21.77 12.45,22 13,22C13.55,22 14.05,21.77 14.41,21.41L21.41,14.41C21.78,14.05 22,13.55 22,13C22,12.44 21.77,11.94 21.41,11.58Z\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<label htmlFor={tag.name} className=\"form-check-label tag-name-label\">{tag.name}</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label className=\"tag-checkbox-container\">\n\t\t\t\t\t\t<input type=\"checkbox\" \n\t\t\t\t\t\t\tclassName=\"input-checkbox-button\"\n\t\t\t\t\t\t\tvalue={tag.name} \n\t\t\t\t\t\t\tonChange={(e) => \n\t\t\t\t\t\t\t\tcheckEvent(e)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={tag.name}\n\t\t\t\t\t\t\tid={tag._id}\n\t\t\t\t\t\t\tchecked={todo.tag.includes(tag.name)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\n\t\tsetList(tagsArray);\n\n\t}\n\n\t//When the tag input is changed, update the list state with the results\n\tasync function tagInputChange(e) {\n\t\tconst name = e.target.value;\n\t\tconst tags = await fetch(`http://localhost:5000/tags/search?${new URLSearchParams({name: name})}`);\n\n\t\tif (!tags.ok) {\n\t\t\tconst message = `An error occurred: ${tags.statusText}`;\n\t\t\twindow.alert(message);\n\t\t\treturn;\n\t\t}\n\n\t\tconst list = await tags.json();\n\t\tconst tagsArray = [];\n\n\t\tif (e.target.value.length === 0) {\n\t\t\tallTags();\n\t\t} else if (list.length === 0) {\n\t\t\ttagsArray.push(\n\t\t\t\t<div className=\"tag-not-found\" key={\"not-found\"}>\n\t\t\t\t\t<span className=\"add-tag-text\">Tag not found</span>\n\t\t\t\t</div>,\n\t\t\t\t<div className=\"add-tag\" key={\"add-tag\"} onClick={() => addTag({name})}>\n\t\t\t\t\t<span className=\"material-symbols-outlined\">\n\t\t\t\t\t\tadd\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"add-tag-text\">\n\t\t\t\t\t\tCreate \"{name}\"\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\tlist.map((tag) => {\n\t\t\ttagsArray.push(\n\t\t\t\t<div className={`tag-name-container ${tag.name}`} key={tag._id} onClick={(e) => tagFormClick(e)}>\n\t\t\t\t\t<div className=\"tag-flex-left\">\n\t\t\t\t\t\t<svg style={{ width: \"1.1rem\", height: \"1.1rem\" }} viewBox=\"0 0 24 24\" className=\"checkbox-sell-symbol\">\n\t\t\t\t\t\t\t<path fill=\"#808080\" d=\"M5.5,7A1.5,1.5 0 0,1 4,5.5A1.5,1.5 0 0,1 5.5,4A1.5,1.5 0 0,1 7,5.5A1.5,1.5 0 0,1 5.5,7M21.41,11.58L12.41,2.58C12.05,2.22 11.55,2 11,2H4C2.89,2 2,2.89 2,4V11C2,11.55 2.22,12.05 2.59,12.41L11.58,21.41C11.95,21.77 12.45,22 13,22C13.55,22 14.05,21.77 14.41,21.41L21.41,14.41C21.78,14.05 22,13.55 22,13C22,12.44 21.77,11.94 21.41,11.58Z\" />\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<label htmlFor={tag.name} className=\"form-check-label tag-name-label\">{tag.name}</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label className=\"tag-checkbox-container\">\n\t\t\t\t\t\t<input type=\"checkbox\" \n\t\t\t\t\t\t\tclassName=\"input-checkbox-button\"\n\t\t\t\t\t\t\tvalue={tag.name} \n\t\t\t\t\t\t\tonChange={(e) => \n\t\t\t\t\t\t\t\tcheckEvent(e)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tname={tag.name}\n\t\t\t\t\t\t\tid={tag._id}\n\t\t\t\t\t\t\tchecked={todo.tag.includes(tag.name)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"checkmark\"></span>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)\n\t\t});\n\n\t\tsetList(tagsArray);\n\t}\n\n\treturn (\n\t\t<div className=\"tag-button\">\n\t\t\t<span className=\"material-symbols-outlined todo-sell-button\" onClick={(e) => tagCheckboxClick(e)}>\n\t\t\t\tsell\n\t\t\t</span>\n\t\t\t<div className=\"tag-blocker\">\n\t\t\t\t<div className=\"form-group tag-form\">\n\t\t\t\t\t<input type=\"search\" className=\"tag-search\" placeholder=\"Search Tags\" onChange={(e) => tagInputChange(e)} />\n\t\t\t\t\t<div className=\"tag-list-div\">\n\t\t\t\t\t{list}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}",[],"/home/vinsinned/todo-app/client/src/components/priorityRadio.js",["86"],[],"import React, { useEffect, useState } from \"react\";\n\nexport default function Radios(props) {\n\tconst {priorities, todo, updateTodo} = props;\n\t//Create a priority button state and give it the current priority svg (Filled vs Not Filled)\n\t//Change this later when it needs to be edited\n\tconst [priorityButton, setPriorityButton] = useState([\n\t\t<svg className={`priority-clickable-button`} onClick={() => buttonClick()} style={{width:\"24px\",height:\"24px\"}} viewBox=\"0 0 24 24\" key={todo.priority}>\n\t\t\t<path className={`flag-svg ${todo.priority}-color`} fill=\"currentColor\" d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3M7,7.25V11.5C7,11.5 9,10 11,10C13,10 14,12 16,12C18,12 18,11 18,11V7.5C18,7.5 17,8 16,8C14,8 13,6 11,6C9,6 7,7.25 7,7.25Z\" stroke=\"#fff\" strokeWidth=\"1\" />\n\t\t</svg>\n\t]);\n\t//Declare a variable which will contain all of the priority buttons HTML\n\tconst prioritiesList = [];\n\n\t//When a priority option is clicked remove the focused styling\n\tfunction priorityClick(e) {\n\t\tupdateTodo({priority: e.target.classList[1]});\n\t\tdocument.getElementsByClassName('priority-clickable-button')[0].classList.remove('priority-clickable-button--clicked');\n\t\tdocument.getElementsByClassName('priority-blocker')[0].classList.remove('priority-blocker--show');\n\t}\n\n\t//When the current todo's priority is changed, change the priority todo button accordingly\n\tuseEffect(() => {\n\t\tif (todo.priority === 'none') {\n\t\t\t//If current priority is none, make it a outlined flag\n\t\t\tsetPriorityButton([\n\t\t\t\t<svg className={`priority-clickable-button`} onClick={() => buttonClick()} style={{width:\"24px\",height:\"24px\"}} viewBox=\"0 0 24 24\" key={todo.priority}>\n\t\t\t\t\t<path className={`flag-svg ${todo.priority}-color`} fill=\"currentColor\" d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3M7,7.25V11.5C7,11.5 9,10 11,10C13,10 14,12 16,12C18,12 18,11 18,11V7.5C18,7.5 17,8 16,8C14,8 13,6 11,6C9,6 7,7.25 7,7.25Z\" stroke=\"#fff\" strokeWidth=\"1\" />\n\t\t\t\t</svg>\n\t\t\t]);\n\t\t} else {\n\t\t\t//Else, make it a filled flag with the priority's color\n\t\t\tsetPriorityButton([\n\t\t\t\t<svg className={`priority-clickable-button`} onClick={() => buttonClick()} style={{width:\"24px\",height:\"24px\"}} viewBox=\"0 0 24 24\" key={todo.priority}>\n\t\t\t\t\t<path className={`flag-svg ${todo.priority}-color`} d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3Z\" />\n\t\t\t\t</svg> \n\t\t\t]);\n\t\t}\n  \t}, [todo.priority]);\n\n\n\t//Call this function immediately, which will populate the prioritiesList array\n\t(function mapPriorities() {\n\t\tlet currentPriority = [];\n\t\tlet flagSvg = [];\n\t\tpriorities.map((priority) => {\n\t\t\tif (todo.priority === priority) {\n\t\t\t\t//If current priority is the current iterated priority, add a checkmark\n\t\t\t\tcurrentPriority = [\n\t\t\t\t\t<span className={`material-symbols-outlined priority-check ${priority}-color`} key={\"check\"}>\n\t\t\t\t\t\tcheck\n\t\t\t\t\t</span>\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\t//Else, there will be no checkmark\n\t\t\t\tcurrentPriority = [];\n\t\t\t};\n\t\t\t//Change priority svg depending on priority\n\t\t\tif (priority === 'none') {\n\t\t\t\tflagSvg = [\n\t\t\t\t\t<svg className=\"priority-svg\" style={{width:\"24px\",height:\"24px\"}} viewBox=\"0 0 24 24\" key={priority}>\n\t\t\t\t\t\t<path className={`flag-svg ${priority}-color`} fill=\"currentColor\" d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3M7,7.25V11.5C7,11.5 9,10 11,10C13,10 14,12 16,12C18,12 18,11 18,11V7.5C18,7.5 17,8 16,8C14,8 13,6 11,6C9,6 7,7.25 7,7.25Z\" stroke=\"#fff\" strokeWidth=\"1\" />\n\t\t\t\t\t</svg>\n\t\t\t\t]\n\t\t\t} else {\n\t\t\t\tflagSvg = [\n\t\t\t\t\t<svg className=\"priority-svg\" style={{width:\"24px\",height:\"24px\"}} viewBox=\"0 0 24 24\" key={priority}>\n\t\t\t\t\t\t<path className={`flag-svg ${priority}-color`} d=\"M6,3A1,1 0 0,1 7,4V4.88C8.06,4.44 9.5,4 11,4C14,4 14,6 16,6C19,6 20,4 20,4V12C20,12 19,14 16,14C13,14 13,12 11,12C8,12 7,14 7,14V21H5V4A1,1 0 0,1 6,3Z\" />\n\t\t\t\t\t</svg>\n\t\t\t\t]\n\t\t\t}\n\t\t\t//Push the current iterated priority's option\n\t\t\tprioritiesList.push(\n\t\t\t\t<li className={`priority-list-container ${priority}`} key={priority} onClick={(e) => priorityClick(e)}>\n\t\t\t\t\t{flagSvg}\n\t\t\t\t\t<span className=\"priority-option-text\">\n\t\t\t\t\t\t{priority.charAt(0).toUpperCase() + priority.slice(1)}\n\t\t\t\t\t</span>\n\t\t\t\t\t{currentPriority}\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\t})();\n\n\t//When the priority todo button is clicked, add the styling and page blocker\n\tfunction buttonClick() {\n\t\tdocument.getElementsByClassName('priority-clickable-button')[0].classList.add('priority-clickable-button--clicked');\n\t\tdocument.getElementsByClassName('priority-blocker')[0].classList.add('priority-blocker--show');\n\t}\n\n\treturn (\n\t\t<div className=\"priority-button\">\n\t\t\t{priorityButton}\n\t\t\t<div className=\"priority-blocker\">\n\t\t\t\t<div className=\"form-group priority-form\">\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{prioritiesList}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","/home/vinsinned/todo-app/client/src/components/navbar.js",["87"],[],"import React from \"react\";\nimport '../styles/style.css';\n \n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n \n// Here, we display our Navbar\nexport default function Navbar() {\n\t//Function for custom cancel in custom search bar\n\tfunction searchClose() {\n\t\tdocument.getElementsByClassName('search-close')[0].classList.remove('show-close');\n\t\tdocument.getElementsByClassName('search-container')[0].classList.remove('search-active');\n\t\tdocument.getElementsByClassName('search-container__navbar-search')[0].classList.remove('search-active');\n\t\tdocument.getElementsByClassName('search-container__search-icon')[0].classList.remove('search-active');\n\t}\n\treturn (\n\t\t<section className=\"navbar\">\n\t\t\t<nav>\n\t\t\t\t<div className=\"left-nav\">\n\t\t\t\t\t<span className=\"material-symbols-outlined\">\n\t\t\t\t\t\tmenu\n\t\t\t\t\t</span>\n\t\t\t\t\t<NavLink to=\"/\" style={{textDecoration: 'none'}}>\n\t\t\t\t\t\t<h3 className=\"left-nav__title\">Tvdo</h3>\n\t\t\t\t\t</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-container\">\n\t\t\t\t\t<button type=\"button\" className=\"search-container__search-icon\">\n\t\t\t\t\t\t<span className=\"material-symbols-outlined search-container__search-icon\">\n\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<input type=\"search\" className=\"search-container__navbar-search\" name=\"searchBar\" />\n\t\t\t\t\t{/*Named search-close in order to bypass includes in app.js function*/}\n\t\t\t\t\t<span className=\"material-symbols-outlined search-close\" onClick={() => searchClose()}>\n\t\t\t\t\t\tclose\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"right-nav\">\n\t\t\t\t\t<span className=\"material-symbols-outlined\">\n\t\t\t\t\t\tadd\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"material-symbols-outlined\">\n\t\t\t\t\t\thelp\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"material-symbols-outlined\">\n\t\t\t\t\t\tnotifications\n\t\t\t\t\t</span>\n\t\t\t\t\t<div className=\"profile\">\n\t\t\t\t\t\t<img className=\"profile__image\" src=\"https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t</section>\n\t);\n}","/home/vinsinned/todo-app/client/src/components/todos.js",["88","89","90"],[],"/home/vinsinned/todo-app/client/src/components/sidebar.js",[],[],"/home/vinsinned/todo-app/client/src/components/colorForm.js",["91"],[],"import React from \"react\";\nimport { createPath } from \"react-router-dom\";\n\nexport default function Colors(props) {\n\tconst {category, colors, updateCategory} = props;\n\n\t//updates category color and removes color dropdown\n\tfunction buttonClick(e) {\n\t\tupdateCategory({color: {\n\t\t\tcolorHex: e.target.getAttribute(\"data-color-hex\"),\n\t\t\tcolorName: e.target.getAttribute(\"data-color-name\")\n\t\t}});\n\t\tdocument.getElementsByClassName('color-dropdown')[0].classList.toggle('color-dropdown--show');\n\t\tdocument.getElementsByClassName('category-form')[0].classList.toggle('category-form--height');\n\t}\n\n\tfunction ColorsList() {\n\t\t//Declare an array to contain all of the color options\n\t\tlet colorSelects = [];\n\t\t//Declare an optional array that will be added a check to the current color chosen for the category\n\t\tlet currentCheck = [];\n\t\tfor (const color in colors) {\n\t\t\t//Reset currentCheck in order to not add a check to every element after current color\n\t\t\tcurrentCheck = [];\n\t\t\tif (category.color.colorHex === colors[color]) {\n\t\t\t\t//If the category state containers this iteration's colorHex, add a check\n\t\t\t\tcurrentCheck = [\n\t\t\t\t<span className=\"material-symbols-outlined color-option__check\" \n\t\t\t\t key=\"check\" style={{color: colors[color]}}>\n\t\t\t\t\tdone\n\t\t\t\t</span>\n\t\t\t\t]\n\t\t\t}\n\t\t\tcolorSelects.push(\n\t\t\t\t<li className=\"color-option\" key={colors[color]} data-color-hex={`${colors[color]}`} data-color-name={`${color}`} onClick={(e) => buttonClick(e)}>\n\t\t\t\t\t<span className=\"color-option__color\" style={{backgroundColor: colors[color]}}/>\n\t\t\t\t\t<span className=\"color-option__name\">{color}</span>\n\t\t\t\t\t{currentCheck}\n\t\t\t\t</li>\n\t\t\t)\n\t\t}\n\t\treturn colorSelects;\n\t}\n\n\treturn (\n\t\t<div className=\"form-group color-group\">\n\t\t\t<ul className=\"color-dropdown\">\n\t\t\t\t{ColorsList()}\n\t\t\t</ul>\n\t\t</div>\n\t)\n}","/home/vinsinned/todo-app/client/src/components/createCategory.js",[],[],"/home/vinsinned/todo-app/client/src/components/datePicker.js",[],[],"/home/vinsinned/todo-app/client/src/components/timePicker.js",["92"],[],"import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport '../styles/style.css';\n\nexport default function ResponsiveTimePicker(props) {\n  const { todo, updateTodo } = props;\n  const [value, setValue] = React.useState(new Date());\n\n  //When the time picker's value is changed, set the state and todo with the new value\n  function timePickerChange(value) {\n    setValue(value);\n    updateTodo({ time: value })\n  }\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <TimePicker\n          value={value}\n          onChange={(value) => timePickerChange(value)}\n          renderInput={(params) => <TextField {...params} />}\n        />\n    </LocalizationProvider>\n  );\n}\n","/home/vinsinned/todo-app/client/src/components/inbox.js",["93","94","95","96","97"],[],{"ruleId":"98","severity":1,"message":"99","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":16},{"ruleId":"98","severity":1,"message":"102","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":18},{"ruleId":"98","severity":1,"message":"103","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":22},{"ruleId":"98","severity":1,"message":"104","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"105","line":4,"column":9,"nodeType":"100","messageId":"101","endLine":4,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":23,"column":18,"nodeType":"108","messageId":"109","endLine":23,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":105,"column":18,"nodeType":"108","messageId":"109","endLine":105,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":167,"column":18,"nodeType":"108","messageId":"109","endLine":167,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":46,"column":29,"nodeType":"108","messageId":"109","endLine":46,"endColumn":31},{"ruleId":"110","severity":1,"message":"111","line":50,"column":7,"nodeType":"112","endLine":50,"endColumn":136},{"ruleId":"98","severity":1,"message":"113","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"114","line":33,"column":17,"nodeType":"100","messageId":"101","endLine":33,"endColumn":27},{"ruleId":"98","severity":1,"message":"115","line":43,"column":11,"nodeType":"100","messageId":"101","endLine":43,"endColumn":19},{"ruleId":"98","severity":1,"message":"116","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"98","severity":1,"message":"117","line":9,"column":11,"nodeType":"100","messageId":"101","endLine":9,"endColumn":15},{"ruleId":"98","severity":1,"message":"116","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":54,"column":23,"nodeType":"108","messageId":"109","endLine":54,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":113,"column":25,"nodeType":"108","messageId":"109","endLine":113,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":172,"column":22,"nodeType":"108","messageId":"109","endLine":172,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":231,"column":23,"nodeType":"108","messageId":"109","endLine":231,"endColumn":25},"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar","'CreateTodo' is defined but never used.","'CreateCategory' is defined but never used.","'useEffect' is defined but never used.","'tags' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'deleteTodo' is defined but never used.","'todoList' is defined but never used.","'createPath' is defined but never used.","'todo' is assigned a value but never used."]